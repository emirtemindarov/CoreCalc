// -4+=-4   особый случай (возможно при парсинге добавлять 0 в начале строки если первый знак -, и 0 или 1 в конце если знак +- или *: ) ГОТОВО
// infix tokens [-, 4, +]
// output queue [4, -, +]
// operators stack []

// (4+4)2,(7-6)=16   особый случай (числа перед и после скобок подразумевают умножение, и запятая без цифр после нее значит целое число ) ГОТОВО
// infix tokens [(, 4, +, 4, ), *, 2, *, (, 7, -, 6, )]
// output queue / postfix [4, 4, +, 2, *, 7, 6, -, *]
// operators stack []

// ((7+3)*2-5)/(1+2)+8-4*2=5
// infix tokens [(, (, 7, +, 3, ), *, 2, -. 5, ), /, (, 1, +, 2, ), +, 8, -, 4, *, 2]
// output queue / postfix [7, 3, +, 2, *, 5, -, 1, 2, +, /, 8, +, 4, 2, *, -]
// operators stack []

// (9-2)*(4+1)/5+3-6*(2+1)=-8   особый случай (внутри ")(" подразумевается умножение между ними) ГОТОВО
// infix tokens [(, 9, -, 2, ), *, (, 4, +, 1, ), /, 5, +, 3, -, 6, *, (, 2, +, 1, )]
// output queue / postfix [9, 2, -, 4, 1, +, *, 5, /, 3, +, 6, 2, 1, +, *, -]
// operators stack []

// 10/2+3*(8-4)-6/2+5*(1+1)=24
// infix tokens [10, /, 2, +, 3, *, (, 8, -, 4, ), -, 6, /, 2, +, 5, *, (, 1, +, 1, )]
// output queue / postfix [10, 2, /, 3, 8, 4, -, *, +, 6, 2, /, -, 5, 1, 1, +, *, +]
// operators stack []

// (15-5)/(2+3)*4+2-(8/2)*3=-2
// infix tokens [(, 15, -, 5, ), /, (, 2, +, 3, ), *, 4, +, 2, -, (, 8, /, 2, ), *, 3]
// output queue / postfix [15, 5, -, 2, 3, +, /, 4, *, 2, +, 8, 2, /, 3, *, -]
// operators stack []

// 2^3+(5-1)*2-6/3+4*(9-7)=22   особый случай (знак ^) ГОТОВО
// infix tokens [2, ^, 3, +, (, 5, -, 1, ), *, 2, -, 6, /, 3, +, 4, *, (, 9, -, 7, )]
// output queue / postfix [2, 3, ^, 5, 1, -, 2, *, +, 6, 3, /, -, 4, 9, 7, -, *, +]
// operators stack []

// FIXME особый случай точка сама по себе (работает но стоит ли так делать "0*." = "0", "*", "0"), в конце числа без дробной части и без целой части в начале ГОТОВО

// FIXME разобраться с представлением знака деления ГОТОВО /

// TODO написать тесты

// TODO ввести правила при вводе символов (
//      "-" заменяет начальный 0, остальные дописываются справа     ГОТОВО
//      новый знак заменяет старый если они идут друг за другом     ГОТОВО
//      ввод точки игнорируется если последний символ был точка     ГОТОВО
//      предусмотреть случай "1.1.1.1.1"                            ГОТОВО
// )

// TODO расширить допустимый предел длины вводимого числа

// TODO поле выражения будет InputText

// TODO создать параметр вывода слова ОШИБКА или возможности расчета странных выражений